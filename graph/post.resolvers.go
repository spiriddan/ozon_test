package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.47

import (
	"context"
	"main/graph/model"
)

// CreatePost is the resolver for the createPost field.
func (r *mutationResolver) CreatePost(ctx context.Context, input model.CreatePostInput) (*model.CreatePostPayload, error) {
	return r.postRepo.CreatePost(input)
}

// Comments is the resolver for the comments field.
func (r *postResolver) Comments(ctx context.Context, obj *model.Post) ([]*model.Comment, error) {
	return r.commentRepo.GetPostComments(obj.ID)
}

// Posts is the resolver for the posts field.
func (r *queryResolver) Posts(ctx context.Context) (*model.PostsPayload, error) {
	return r.postRepo.GetPosts()
}

// Post is the resolver for the post field.
func (r *queryResolver) Post(ctx context.Context, input model.PostFilter) (*model.PostPayload, error) {
	return r.postRepo.GetPost(input)
}

// Post returns PostResolver implementation.
func (r *Resolver) Post() PostResolver { return &postResolver{r} }

type postResolver struct{ *Resolver }
